name: Build Chlaty CLI on Windows

on:
  push:
    branches: [build]
  pull_request:
    branches: [build]

jobs:
  build-windows:
    
    strategy:
      matrix:
        target:
          - x86_64-pc-windows-msvc     # 64-bit
          - i686-pc-windows-msvc       # 32-bit
          - aarch64-pc-windows-msvc    # ARM64

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust and Target
        uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.target }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: '. -> target'

      - name: Set Linker for i686
        if: matrix.target == 'i686-pc-windows-msvc'
        run: echo "CARGO_TARGET_I686_PC_WINDOWS_MSVC_LINKER=link.exe" >> $env:GITHUB_ENV

      - name: Set Linker for aarch64
        if: matrix.target == 'aarch64-pc-windows-msvc'
        run: echo "CARGO_TARGET_AARCH64_PC_WINDOWS_MSVC_LINKER=link.exe" >> $env:GITHUB_ENV

      - name: Build chlaty-cli
        run: cargo build --release --target ${{ matrix.target }}

      - name: Rename chlaty-cli
        run: |
          $source = Get-ChildItem -Path "target/${{ matrix.target }}/release/" -Filter *.exe | Select-Object -First 1
          $destination = Join-Path -Path $source.DirectoryName -ChildPath "chlaty-cli-${{ matrix.target }}.exe"
          Rename-Item -Path $source.FullName -NewName $destination


      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifact-chlaty-cli-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/chlaty-cli-${{ matrix.target }}.exe

